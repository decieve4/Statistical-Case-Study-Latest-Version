There’s this great moment in the documentary Jiro Dreams of Sushi (2011) when the world’s most celebrated sushi chef turns to his son, who is leaving to start his own restaurant, and says: ‘You have no home to come back to.’ Which, when you think about it, isn’t harsh or discouraging but is in fact the very best thing you could say to someone setting out on an adventure. Last October I quit my job to become a freelance journalist. I had only ever made about $900 from writing, but my latest project, a profile of Douglas Hofstadter, had attracted interest from a couple of big American magazines. I stood to make anywhere between $10,000 and $20,000 from the piece. My plan was to sell that profile and keep writing others like it. This would be a rambling life of the mind. I would find a subject that I was intensely curious about and I’d live with it until I’d learnt everything there was to know. Then I would sit in a room somewhere and tap out a synthesis of such depth and piquant grace that no writer of non-fiction would think to touch my subject again — because I had nailed it, because I had put it to rest forever. My new life began on a Monday. I’m a late sleeper, but I read somewhere that writers do their best work in the mornings. So I woke up early, put on some coffee, and cracked open my laptop. When, in 1958, Ernest Hemingway was asked: ‘What would you consider the best intellectual training for the would-be writer?’, he responded: Let’s say that he should go out and hang himself because he finds that writing well is impossibly difficult. Then he should be cut down without mercy and forced by his own self to write as well as he can for the rest of his life. At least he will have the story of the hanging to commence with.Writing is a mentally difficult thing — it’s hard to know when something’s worth saying; it’s hard to be clear; it’s hard to arrange things in a way that will hold a reader’s attention; it’s hard to sound good; it’s even hard to know whether, when you change something, you’re making it better. It’s all so hard that it’s actually painful, the way a long run is painful. It’s a pain you dread but somehow enjoy. I worked on my Hofstadter piece until early Thursday afternoon. On Thursday night I got an unexpected email. It was a job offer, and these were the terms: $120,000 in salary, a $10,000 signing bonus, stock options, a free gym membership, excellent health and dental benefits, a new cellphone, and free lunch and dinner every weekday. My working day would start at about 11am. It would end whenever I liked, sometime in the early evening. The work would rarely strain me. I’d have a lot of autonomy and responsibility. My co-workers would be about my age, smart, and fun. I put my adventure on hold. In college I sort of aimlessly played. I read what I wanted and tinkered with my computer, I made little websites for my own amusement, I slept late and skipped class, and though sometimes I saw myself as an intellectual-at-large in the style of Will Hunting, I was basically just irresponsible. It’s only because of an exogenous miracle that, when I graduated in 2009 with a 2.9 GPA and entered a famously bad job market, I didn’t end up in privileged limbo — in Brooklyn, say, on my parents’ dime. In fact, I was among the most employable young men in the world. The exogenous miracle is that playing around with websites suddenly became a lucrative profession. ‘What about somebody in a coal mine — wouldn’t you say he works as hard as you? Why should you get paid so much more than that guy?’ I am a web developer, and there has never been a better time to do what I do. Here’s how crazy it is: I have a friend who decided, part way into his second year of law school, to start coding. Two months later he was enrolled in Hacker School in New York, and three months later he was working as an intern at a consultancy that helps build websites for start-ups. A month into that internship — we’re talking a total of six months here — he was promoted to a full-time position worth $85,000. I didn’t think finding good work would be this easy. I always figured I would end up like my sister. My sister set academic records in high school and studied at the University of Chicago but the only position matching her qualifications, when she came out of school, was a job translating airline menus. She had an especially bright and sensitive mind, but no technical specialty; and the market did what it’s wont to do to people like that. I remember one time at dinner she had asked my dad, who was something of a corporate bigshot: ‘You always talk about the value of hard work. But what about somebody in a coal mine — wouldn’t you say he works as hard as you? Why should you get paid so much more than that guy?’ I used to think that was an awfully naive question. In 1999 a dotcom with no revenue could burn $100 million in one year, with $2 million of that going to a Super Bowl ad. Its namesake website could offer a terrible user experience, and still the company could go public. Investors would chase the rising stock price, which would drive up the price further, which in turn drew more investors, feeding a textbook ‘speculative bubble’ that burst the moment everyone realised there wasn’t any there there. This kind of stuff isn’t happening any more. It’s not that the internet has become less important, or investors less ‘irrationally exuberant’ — it’s that start-ups have gotten cheaper. A web start-up today has almost no fixed capital costs. There’s no need to invest in broadband infrastructure, since it’s already there. There’s no need to buy TV ads to get market share, when you can grow organically via search (Google) and social networks (Facebook). ‘Cloud’ web servers, like nearly all other services a virtual company might need — such as credit-card processing, automated telephone support, mass email delivery — can be paid for on demand, at prices pegged to Moore’s Law. You can see why I’m in such good shape. In this particular gold rush the shovel is me Which means that these days the cost of finding out whether a start-up is actually going to succeed isn’t hundreds of millions of dollars — it’s hundreds of thousands of dollars. It’s the cost of a couple of laptops and the salary you pay the founders while they try stuff. A $100 million pool of venture capital, instead of seeding five or 10 start-ups, can now seed 1,000 small experiments, most of which will fail, one of which will become worth a billion dollars. And so there is a frenzy on. You can see why I’m in such good shape. In this particular gold rush the shovel is me. We web developers are the limiting reagent of every start-up experiment, we’re the sine qua non, because we’re the only ones who know how to reify app ideas as actual working software. In fact, we are so much the essence of these small companies that, in Silicon Valley, a start-up with no revenue is said to be worth exactly the number of developers it has on staff. The rule of thumb is that each one counts for $1 million. It helps that there aren’t enough of us to go around. I’m told by a friend at Bloomberg that they missed their quarterly tech hiring target in New York by 200 people. I get at least two enquiries a week from headhunters trying to lure me from my current job. If I say that I’m actively looking, I become a kind of local celebrity, my calendar fills with coffees and conversations, reverse-interviews where start-ups try to woo me. It’s as if the basic structure of this sector of the global economy has been designed for my benefit. Since developers are a start-up’s most important — if not their only — asset, start-ups compete by trying to be a better place for developers to work. Just a few weeks ago, an MTV2 camera crew came into my office to film an episode of a show called Jobs That Don’t Suck. Cash bonuses, raises, stock options and gifts are the norm. I once worked at a place that had a special email address where you’d send requests for free stuff — a $300 keyboard, a $900 chair, organic maple syrup. I have yet to take a job where there wasn’t beer readily at hand. Hours are flexible and time off is plentiful. Fuck-ups are quickly forgiven. Your concerns are given due regard. Your mind is prized. You are, in short, taken care of. You can imagine what it does to the ego, to be courted and called ‘indispensable’ and in general treated like you’re the one pretty girl for miles. When a lot of your contemporaries don’t even have jobs. When work, for most people, has a Damoclean instability to it, a mortal urgency. To be this highly employable is to feel liquid, easy, as if you can do no wrong. I know that I have a great job guaranteed in any major city. And it’s hard not to give a thing like that moral heft. It validates you is what I mean; it inflates your sense of your own character. I tell myself a story, sometimes, that while other people partied or read for pleasure, I was sitting in a room with my head down, fighting — that I worked hard to learn these minute technical things, and now I’m getting paid for it. Something prima donna-ish can happen when you start believing stories like that. I look at a lot of inbound résumés at my current job, and I throw away everybody who’s not a programmer. I do this enough times each day that a simple association has formed in my mind: if you’re not technical, you’re not valuable. We’re the ones with the magic powers. Every programmer knows that code looks cool, that eyes widen when we fill our screens with colourful incantations. ‘The programmer,’ the late Dutch computer scientist Edsger Dijkstra wrote in 1988, ‘has to be able to think in terms of conceptual hierarchies that are much deeper than a single mind ever needed to face before.’ We like that idea. We like to think that because we can code, we have unprecedented leverage over the world. We decide what 15 million people will see when they follow a link. Our laptops literally get hot from the electric action we command. Nobody tells us we’re wrong for thinking this way. In fact, they reinforce the impulse. They congratulate us on being ahead of the curve. And when you consider my prospects without code and you consider my prospects with code, the lesson really does seem to be: join me! Try Codecademy in New York, go to Hacker School — pledge yourself, like Michael Bloomberg did in 2012, to learn to code. But that shouldn’t be the lesson. I was only 21 when I became the chief technical officer of an American corporation. When that happened, I thought of my dad because he, too, had once been among the country’s youngest corporate executives, a chief financial officer (CFO) by the time he was 28. The only difference is that the company he helped to run in his twenties was Hardee’s, a fast-food restaurant chain with more than 1,000 locations, while the company I helped to run was a web start-up. Just about all we did, in our three years of operation, was spend $350,000 of other people’s money. Dad’s company made hamburgers; mine ate them. I have a friend who’s a mechanical engineer. He used to build airplane engines for General Electric, and now he’s trying to develop a smarter pill bottle to improve compliance for AIDS and cancer patients. He works out of a start-up ‘incubator’, in an office space shared with dozens of web companies. He doesn’t have a lot of patience for them. ‘I’m fucking sick of it,’ he told me, ‘all they talk about is colours.’ Web start-up companies are like play-companies. They stand in relation to real companies the way those cute little make-believe baking stations stand in relation to kitchens. Take Doormates, a failed start-up founded in 2011 by two recent graduates from Columbia University whose mission was to allow users ‘to join or create private networks for buildings with access restricted to only building residents’. For that they, too, raised $350,000. You wonder whether anyone asked: ‘Do strangers living in the same building actually want to commune? Might this problem not be better solved by a plate of sandwiches?’ (The founders have since moved on to ‘Mommy Nearest’, an iPhone app that points out mom-friendly locations around New York.) A lot of the stuff going on just isn’t very ambitious. ‘The thing about the advertising model is that it gets people thinking small, lean,’ wrote Alexis Madrigal in an essay about start-ups in The Atlantic last year. ‘Get four college kids in a room, fuel them with pizza, and see what thing they can crank out that their friends might like. Yay! Great! But you know what? They keep tossing out products that look pretty much like what you’d get if you took a homogenous group of young guys in any other endeavour: Cheap, fun, and about as worldchanging as creating a new variation on beer pong.’ Groupon clones are popular, as are apps that help you find nearby bars and restaurants. There are dozens of dating apps with little twists — like Tinder, an iPhone app where you swipe to the right on a potential match’s picture if you like them, and to the left if you don’t; or Coffee Meets Bagel, which gives you one match per day for a low-stakes, let’s-just-grab-a-coffee date. SideTour, whose tech team is run by a former co-worker, lets you buy small ‘experiences’ around the city, like dinner with a monk. Just yesterday a developer friend of mine who’d recently gone out on his own shared his latest idea: an app that shows you nearby ATMs. The most successful start-ups, at least if you go by the numbers — $13.5 million to Snapchat, $30 million to Vine, $1 billion to Instagram (each of these windfalls indirectly underwriting 100 low-rent copycats) — seem to be the ones that offer teenagers new ways to share photos with each other. When I go to the supermarket I sometimes think of how much infrastructure and ingenuity has gone into converting the problem of finding my own food in the wild to the problem of walking around a room with a basket. So much intelligence and sweat has gone into getting this stuff into my hands. It’s my sustenance: other people’s work literally sustains me. And what do I do in return? We call ourselves web developers, software engineers, builders, entrepreneurs, innovators. We’re celebrated, we capture a lot of wealth and attention and talent. We’ve become a vortex on a par with Wall Street for precocious college grads. But we’re not making the self-driving car. We’re not making a smarter pill bottle. Most of what we’re doing, in fact, is putting boxes on a page. Users put words and pictures into one box; we store that stuff in a database; and then out it comes into another box. Web development is more like plumbing than any of us, perched in front of two slick monitors, would care to admit We fill our days with the humdrum upkeep of these boxes: we change the colours; we add a link to let you edit some text; we track how far you scroll down the page; we allow you to log in with your Twitter account; we improve search results; we fix a bug where uploading a picture would sometimes never finish. I do most of that work with a tool called Ruby on Rails. Ruby on Rails does for web developers what a toilet-installing robot would do for plumbers. (Web development is more like plumbing than any of us, perched in front of two slick monitors, would care to admit.) It makes tasks that used to take months take hours. And the important thing to understand is that I am merely a user of this thing. I didn’t make it. I just read the instruction manual. In fact, I’m especially coveted in the job market because I read the instruction manual particularly carefully. Because I’m assiduous and patient with instruction manuals in general. But that’s all there is to it. My friends and I who are building websites — we’re kids! We’re kids playing around with tools given to us by adults. In decreasing order of adultness, and leaving out an awful lot, I’m talking about things such as: the Von Neumann stored program computing architecture; the transistor; high-throughput fibre-optic cables; the Unix operating system; the sci-fi-ish cloud computing platform; the web browser; the iPhone; the open source movement; Ruby on Rails; the Stack Overflow Q&amp;amp;A site for programmers; on and on, all the way down to the code that my slightly-more-adult co-workers write for my benefit. This cascade of invention is a miracle. But as much as I want to thank the folks who did it all, I also want to warn them: When you make it this easy to write and distribute software, so easy that I can do it, you risk creating a fearsome babel of gimcrack entrepreneurship. Is there another dotcom bubble on? It’s hard to call it a ‘bubble’ when the Nasdaq’s not running wild, when no one’s going to lose their pension — when all anyone’s going to lose is, in fact, time: time pretending at enterprise; time ‘sharing’ and ‘liking’ in forums of no consequence; time tapping out pedestrian code, extracting easy money. The only rigorous way to think about value is in terms of dollars, in terms of prices arrived at by free exchange. Numbers like that are hard to dispute. If a price is ‘too low’ or ‘too high’, there’s said to be an opportunity for risk-free moneymaking. People tend to gobble up those opportunities. And so the prices of things tend to level out to just where they’re supposed to be, to just what the market will bear. Am I paid too much to code? Am I paid too little to write? No: in each case, I’m paid exactly what I should be. It’s like that question my sister asked dad at dinner. There’s an answer to that question — and this is the one I remember hearing that night — that says that my dad was probably paid more than the coal miner because the skills required to be CFO of a Fortune 500 company are scarcer, and more wanted, than the skills required to be a coal miner. It’s the combination of scarcity and wantedness that drives up a salary. And that answer seems fair, and fine, it seems to settle the question, but we’re not talking about pork belly futures, we’re talking about real people and what they do all day, and my sister, naive as she sounded, had a point, and that point is that the truly naive thing, the glib and facile thing, might be equating value with a market-clearing price. The price of a word is being bid to zero. That one magazine story I’ve been working on has been in production for a year and a half now, it’s been a huge part of my life, it’s soaked up so many after-hours, I’ve done complete rewrites for editors — I’ve done, and will continue to do, just about anything they say — and all for free. There’s no venture capital out there for this; there are no recruiters pursuing me; in writer-town I’m an absolute nothing, the average response time on the emails I send is, like, three and a half weeks. I could put the whole of my energy and talent into an article, everything I think and am, and still it could be worth zero dollars. And so despite my esteem for the high challenge of writing, for the reach of the writerly life, it’s not something anyone actually wants me to do. The American mind has made that very clear, it has said: ‘Be a specialised something — fill your head with the zeitgeist, with the technical — and we’ll write your ticket.’ I don’t have the courage to say no to that. I have failed so far to escape the sweep of this cheap and parochial thing, and it’s because I’m afraid. I am an awfully mediocre programmer — but, still, I have a secure future. More than that, I have a place at the table. In the mornings I wake up knowing that I make something people want. I know this because of all the money they give me. Correction, June 9, 2013: An earlier version of this essay misstated the terms of the job offer extended to the author in October, 2012. In the previous version, the author stated that he was offered a salary of $150,000. This has been changed to reflect that the offer was for $120,000.  